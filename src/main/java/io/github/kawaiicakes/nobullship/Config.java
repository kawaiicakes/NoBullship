package io.github.kawaiicakes.nobullship;

import com.mojang.datafixers.util.Pair;
import it.unimi.dsi.fastutil.objects.ObjectArrayList;
import net.minecraftforge.common.ForgeConfigSpec;

import java.util.ArrayList;
import java.util.List;

public class Config {
    public static ForgeConfigSpec CONFIG;

    public static ForgeConfigSpec.DoubleValue COOLDOWN, DROP_RAW_PERCENT;
    public static ForgeConfigSpec.BooleanValue AUTO_RECIPE, DISABLE_DROP, DROP_RAW;
    public static ForgeConfigSpec.ConfigValue<List<? extends String>> EXCEPTION_RECIPE, EXCEPTION_DROP;
    public static ForgeConfigSpec.ConfigValue<List<? extends Pair<String, Integer>>> DROP_RATES;

    static {
        ForgeConfigSpec.Builder builder = new ForgeConfigSpec.Builder();
        builder.push("No Bullship!");

        COOLDOWN = builder
                .comment("The time in seconds that schematics become unusable after use.")
                .translation("config.nobullship.cooldown")
                .comment("Default 1.0 seconds.")
                .defineInRange("cooldown", 1.0, 0.50, 30);

        DROP_RAW_PERCENT = builder
                .comment("The percentage of blocks that will be dropped if an entity is destroyed.")
                .comment("Ignored if raw_drops is disabled.")
                .translation("config.nobullship.raw_drops_percent")
                .comment("Default 67%.")
                .defineInRange("raw_drops_percent", 0.67, 0, 1.00);

        AUTO_RECIPE = builder
                .comment("Whether schematic recipes are autogenerated for all multiblock recipes.")
                .comment("Autogenerated recipes have a shaped component of the normal crafting recipe - if one exists.")
                .translation("config.nobullship.auto_recipe")
                .comment("Default false.")
                .define("auto_recipe", false);

        DISABLE_DROP = builder
                .comment("Whether entities with a multiblock recipe may drop as an item.")
                .translation("config.nobullship.default_drops")
                .comment("Default true.")
                .define("default_drops", true);

        DROP_RAW = builder
                .comment("Whether entities with a multiblock recipe drop a portion of the raw ingredients needed to make them.")
                .translation("config.nobullship.raw_drops")
                .comment("Default true.")
                .define("raw_drops", true);

        EXCEPTION_RECIPE = builder
                .comment("Acts as a whitelist for automatic recipes when auto_recipe is disabled, and a blacklist when enabled.")
                .translation("config.nobullship.recipe_exceptions")
                .defineList("recipe_exceptions", ObjectArrayList.wrap(new String[]{}), (obj) -> obj instanceof String);

        EXCEPTION_DROP = builder
                .comment("Acts as a whitelist for automatic recipes when raw_drops is disabled, and a blacklist when enabled.")
                .translation("config.nobullship.drop_exceptions")
                .defineList("drop_exceptions", ObjectArrayList.wrap(new String[]{}), (obj) -> obj instanceof String);

        DROP_RATES = builder
                .comment("If raw_drops is enabled, this allows overrides of specific drop rates.")
                .translation("config.nobullship.drop_rates")
                .defineList("drop_rates", new ArrayList<>(), (obj)
                        -> obj instanceof Pair<?, ?> pair
                        && pair.getFirst() instanceof String
                        && pair.getSecond() instanceof Integer
                );

        CONFIG = builder.build();
    }
}
